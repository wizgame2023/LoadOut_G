/*!
@file Character.h
@brief キャラクターなど
*/

#pragma once
#include "stdafx.h"
#include "Ray.h"

namespace basecross {

	class Enemy :public Actor
	{
	private:
		Vec3 m_pos;
		Vec3 m_playerPos;
		float m_speed;
		float m_angle;

		// 現在のステートを入れておく
		shared_ptr<StateBase> m_CurrentSt;

		// 次のステートを入れておく、ステートが入ると即座に切り替わる
		shared_ptr<StateBase> m_NextSt;

		shared_ptr<Ray>m_forwardRay;
		shared_ptr<Ray>m_leftRay;
		shared_ptr<Ray>m_playerRay;

	public:
		//コンストラクタ・デストラクタ
		Enemy(shared_ptr<Stage>& StagePtr);
		Enemy(shared_ptr<Stage>& StagePtr,Vec3 pos);

		~Enemy();

		//生成・更新・削除
		virtual void OnCreate() override;
		virtual void OnUpdate() override;
		virtual void OnDestroy() override;

		// m_NextStateに代入する
		template <typename NextState>
		void ChangeState()
		{
			m_NextSt.reset();

			m_NextSt = make_shared<NextState>(GetThis<Enemy>());
		}
		float GetSpeed();

		float GetAngle();
		float GetDistance(Vec3 a, Vec3 b);
		void SetAngle(float angle);
		void GetGameOverScene();
		Vec3 GetPlayerPos();
		shared_ptr<Ray> GetForwardRay();
		shared_ptr<Ray> GetPlayerRay();
	};
}
//end basecross
